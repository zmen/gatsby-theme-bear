{"version":3,"sources":["webpack:///../gatsby-theme-bear/src/components/home.tsx","webpack:///../gatsby-theme-bear/src/pages/index.tsx"],"names":["Home","href","style","padding","color","Container","styled","div","IndexPage","locationInfo","useLocation","useContext","PostContext","posts","tags","tag","queryString","parse","search","files","filter","file","isTagInclude","left","mid","articles","title"],"mappings":"2KAUeA,EARF,WACX,OAAQ,oCAAS,kDAAT,oCACN,uBAAGC,KAAK,mDACNC,MAAO,CAAEC,QAAS,MAAOC,MAAO,YADlC,8B,qECWEC,EAAYC,IAAOC,IAAV,uEAAGD,CAAH,oFA2BAE,UAnBG,WAChB,IAAMC,EAAeC,wBADC,EAEEC,qBAAWC,KAA3BC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,KACTC,EAAMC,IAAYC,MAAMR,EAAaS,QAAQH,IAC7CI,EAAQN,EAAMO,QAAO,SAAAC,GAAI,OAAIC,YAAaD,EAAKP,KAAMC,MAE3D,OACE,kBAAC,IAAD,CACEQ,KAAM,kBAAC,IAAD,CAAMT,KAAMA,IAClBU,IAAK,kBAAC,IAAD,CAAaC,SAAUN,KAE5B,kBAAC,IAAD,CAAKO,MAAM,SACX,kBAACrB,EAAD,KACE,kBAAC,EAAD","file":"component---gatsby-theme-bear-src-pages-index-tsx-68cbe8c8b04377d70b6f.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (<div>Use <i>component shadowing</i> to customize this view, refer to\n    <a href=\"https://www.gatsbyjs.com/tutorial/using-a-theme/\"\n      style={{ padding: '6px', color: '#108ee9' }}\n    >[Gatsby - Using a theme]</a>\n  </div>);\n};\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport PostContext from '../context/PostContext';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport Home from '../components/home';\nimport Menu from '../components/menu';\nimport ArticleList from '../components/article-list';\nimport queryString from 'query-string';\nimport { isTagInclude } from '../utils/Tag';\nimport { useLocation } from \"@reach/router\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst IndexPage = () => {\n  const locationInfo = useLocation();\n  const { posts, tags } = useContext(PostContext);\n  const tag = queryString.parse(locationInfo.search).tag;\n  const files = posts.filter(file => isTagInclude(file.tags, tag as string));\n\n  return (\n    <Layout\n      left={<Menu tags={tags} />}\n      mid={<ArticleList articles={files} />}\n    >\n      <SEO title=\"Home\" />\n      <Container>\n        <Home />\n      </Container>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\n"],"sourceRoot":""}